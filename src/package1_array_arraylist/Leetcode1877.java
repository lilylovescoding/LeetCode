package package1_array_arraylist;
//【数组中最大数对和的最小值】
// 一个数对(a,b) 的数对和等于a + b 。最大数对和 是一个数对数组中最大的数对和
// 给你一个长度为偶数n的数组nums，请你将nums中的元素分成n/2个数对，使得nums中每个元素恰好在一个数对中，且最大数对和的值最小
// 请你在最优数对划分的方案下，返回最小的最大数对和
// nums = [3,5,2,3]  => 7 [数组中的元素可以分为数对(3,3)和(5,2), 最大数对和为max(3+3, 5+2) = max(6, 7) = 7]
// nums = [3,5,4,2,4,6] => 8 [数组中的元素可以分为数对 (3,5)，(4,4) 和 (6,2), 最大数对和为max(3+5, 4+4, 6+2) = max(8, 8, 8) = 8]
//public class Leetcode1877 {
//    public int minPairSum(int[] nums) {
//
//    }
//}
